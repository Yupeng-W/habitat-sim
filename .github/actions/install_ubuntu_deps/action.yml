name: install_all_ubuntu_deps
runs:
  using: composite
  steps:
  - name: install cmake
    # OpenEXR requires CMake 3.12. We also download CMake 3.20, which
    # we'll use later for the JS build only.
    run: |
      echo $(date +%F) > ./date
      echo $(git ls-remote https://github.com/facebookresearch/habitat-lab.git HEAD | awk '{ print $1}') > ./hablab_sha
      cat ./hablab_sha
      wget https://cmake.org/files/v3.12/cmake-3.12.4-Linux-x86_64.sh
      wget https://cmake.org/files/v3.20/cmake-3.20.1-linux-x86_64.sh
      sudo mkdir /opt/cmake312
      sudo mkdir /opt/cmake320
      sudo sh ./cmake-3.12.4-Linux-x86_64.sh --prefix=/opt/cmake312 --skip-license
      sudo sh ./cmake-3.20.1-linux-x86_64.sh --prefix=/opt/cmake320 --skip-license
      sudo ln -s /opt/cmake312/bin/cmake /usr/local/bin/cmake
      . ~/.bashrc
      echo ls -la /usr/local/bin/cmake
      echo ls -la /usr/local/bin/
      echo ls -la /opt
      cmake --version
    shell: bash
  - name: Install dependencies
    run: |-
      echo "Install dependencies"
      sudo apt-get update || true
      sudo apt-get install -y --no-install-recommends \
        build-essential \
        git \
        curl \
        vim \
        ca-certificates \
        libjpeg-dev \
        libglm-dev \
        libegl1-mesa-dev \
        ninja-build \
        xorg-dev \
        freeglut3-dev \
        pkg-config \
        wget \
        zip \
        lcov\
        libhdf5-dev \
        libomp-dev \
        unzip || true
    shell: bash
  - name: Install cuda
    run: |-
      echo "Install cuda"
      wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb
      sudo dpkg -i cuda-keyring_1.1-1_all.deb
      sudo apt-get update
      sudo apt-get -y install cuda-toolkit-12-3
      touch ~/cuda_installed
      if command -v nvidia-smi; then nvidia-smi; fi
    shell: bash
  - name: Setup miniconda
    uses: conda-incubator/setup-miniconda@v3.0.1
    with:
      miniconda-version: "latest"
      python-version: "3.9"
      activate-environment: "habitat"
  - name: Install conda and dependencies
    run: |-
      echo "Install conda and dependencies"
      conda install -y pytorch==1.12.1 torchvision==0.13.1 -c pytorch -c nvidia
      conda install -y -c conda-forge ninja numpy pytest pytest-cov ccache hypothesis pytest-mock
      pip install pytest-sugar pytest-xdist pytest-benchmark opencv-python cython mock
    shell: bash -el {0}
  - name: Validate Pytorch Installation
    run: |-
      echo "Validate Pytorch Installation"
      # Check that pytorch is installed with CUDA.
      python -c 'import torch; torch.cuda.set_device(0)'
    shell: bash -el {0}
